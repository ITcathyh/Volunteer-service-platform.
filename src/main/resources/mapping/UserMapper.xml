<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hyh.dao.UserDao">
    <resultMap id="BaseResultMap" type="hyh.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="studentid" property="studentid" jdbcType="INTEGER"/>
        <result column="qq" property="qq" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="selfsex" property="selfsex" jdbcType="TINYINT"/>
        <result column="createtime" property="createtime" jdbcType="TIMESTAMP"/>
        <result column="ip" property="ip" jdbcType="VARCHAR"/>
        <result column="pairid" property="pairid" jdbcType="INTEGER"/>
        <result column="pairtype" property="pairtype" jdbcType="TINYINT"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
    </resultMap>
    <select id="getById" resultMap="BaseResultMap">
    select * from user
    where id = #{id}
  </select>

    <select id="getByStudentidAndType" resultMap="BaseResultMap">
    select * from user
    where studentid = #{studentid} and type = #{type}
  </select>

    <select id="getByPairtype" resultMap="BaseResultMap">
        select * from user
        where type = 1 and pairtype = #{pairtype}
    </select>

    <select id="getByType" resultMap="BaseResultMap">
        select * from user
        where type = #{type}
    </select>

    <select id="getByTypeAndPairid" resultMap="BaseResultMap">
        select * from user
        where type = #{type} and pairid = #{pairid}
    </select>

    <select id="getPairedByType" resultMap="BaseResultMap">
        select * from user
        where type = #{type} and pairid != 0 and status = 0
    </select>

    <select id="getAll" resultMap="BaseResultMap">
        select * from user
    </select>

    <select id="getCountByType" resultType="Integer">
        select count(*) from user
        where type = #{type}
    </select>

    <select id="getCountByIpAndType" resultType="Integer">
        select count(*) from user
        where type = #{type} and ip = #{ip}
    </select>

    <select id="getCountByStatusAndType" resultType="Integer">
        select count(*) from user
        where type = #{type} and status = #{status} and pairid != 0
    </select>

    <select id="getFreeCountByType" resultType="Integer">
        select count(*) from user
        where type = #{type} and pairid = 0
    </select>

    <select id="isExist" resultType="Integer">
        select count(*) from user
        where studentid = #{studentid} and type = #{type} limit 1
    </select>

    <delete id="deleteById">
    delete from user
    where id = #{id}
  </delete>

    <delete id="deleteByStudentidAndType">
    delete from user
    where studentid = #{studentid} and type = #{type}
  </delete>

    <update id="deleteAll">
        truncate table user
    </update>

    <insert id="add" parameterType="hyh.entity.User" useGeneratedKeys="true" keyProperty="id">
    insert into user (name, studentid,
      qq, phone,email,ip, selfsex,
      pairid, pairtype,type)
    values ( #{name}, #{studentid},
      #{qq}, #{phone},#{email}, #{ip}, #{selfsex},
       #{pairid}, #{pairtype}, #{type})
  </insert>

    <update id="update" parameterType="hyh.entity.User">
    update user
    set name = #{name},
      qq = #{qq},
      phone = #{phone},
      email = #{email},
      selfsex = #{selfsex},
      pairid = #{pairid}
    where id = #{id}
  </update>

    <update id="updatePairid">
        update user
        set pairid = #{pairid}
        where id = #{id}
    </update>

    <update id="updateStatus">
        update user
        set status = #{status}
        where studentid = #{studentid}
    </update>

</mapper>